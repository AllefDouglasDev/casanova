{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/allefdouglasdev/Documents/Workspace/casanova/client/src/pages/items/new/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Button } from \"components\";\nimport { Categories } from \"core/types\";\nimport Router from \"next/router\";\nimport { useState } from \"react\";\nimport { addItem } from \"services/item.service\";\nimport * as S from \"./styles\";\nvar PASSWORD = \"reginaldo\";\nexport default function NewItem() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(\"\"),\n      itemName = _useState[0],\n      setItemName = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      password = _useState2[0],\n      setPassword = _useState2[1];\n\n  var _useState3 = useState(Categories[0]),\n      category = _useState3[0],\n      setCategory = _useState3[1];\n\n  var _useState4 = useState({\n    text: \"\",\n    kind: \"success\"\n  }),\n      message = _useState4[0],\n      setMessage = _useState4[1];\n\n  function showMessage(text) {\n    var kind = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"success\";\n    setMessage({\n      text: text,\n      kind: kind\n    });\n    setTimeout(function () {\n      return setMessage({\n        text: \"\",\n        kind: kind\n      });\n    }, 2500);\n  }\n\n  function handleGoToList() {\n    Router.push(\"/items\");\n  }\n\n  function handleAddNewItem(_x) {\n    return _handleAddNewItem.apply(this, arguments);\n  }\n\n  function _handleAddNewItem() {\n    _handleAddNewItem = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n\n              if (itemName) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\", showMessage(\"Nome do item não pode ser vazio\", \"danger\"));\n\n            case 3:\n              if (!(password !== PASSWORD)) {\n                _context.next = 5;\n                break;\n              }\n\n              return _context.abrupt(\"return\", showMessage(\"Senha inválida\", \"danger\"));\n\n            case 5:\n              _context.prev = 5;\n              _context.next = 8;\n              return addItem({\n                name: itemName,\n                owner: \"\",\n                category: category\n              });\n\n            case 8:\n              setItemName(\"\");\n              showMessage(\"Item adicionado com sucesso\");\n              _context.next = 15;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](5);\n              showMessage(\"Erro ao criar item\", \"danger\");\n\n            case 15:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[5, 12]]);\n    }));\n    return _handleAddNewItem.apply(this, arguments);\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, __jsx(S.Form, {\n    onSubmit: handleAddNewItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    placeholder: \"Item\",\n    value: itemName,\n    onChange: function onChange(e) {\n      return setItemName(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"categories\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Selecione uma categoria:\"), __jsx(\"select\", {\n    name: \"categories\",\n    id: \"categories\",\n    value: category,\n    onChange: function onChange(e) {\n      return setCategory(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, Categories.map(function (c, index) {\n    return __jsx(\"option\", {\n      key: String(index),\n      value: c,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    }, c);\n  })), __jsx(\"input\", {\n    placeholder: \"senha\",\n    type: \"password\",\n    value: password,\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"Adicionar\"), __jsx(S.Message, {\n    kind: message.kind,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }\n  }, message.text)), __jsx(S.GoToListWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    onClick: handleGoToList,\n    kind: \"danger\",\n    outlined: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 9\n    }\n  }, \"LISTA DE ITEMS\")));\n}\n\n_s(NewItem, \"2lqfHwn79m/mqxDTGSX78KAdvMQ=\");\n\n_c = NewItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewItem\");","map":{"version":3,"sources":["/Users/allefdouglasdev/Documents/Workspace/casanova/client/src/pages/items/new/index.tsx"],"names":["Button","Categories","Router","useState","addItem","S","PASSWORD","NewItem","itemName","setItemName","password","setPassword","category","setCategory","text","kind","message","setMessage","showMessage","setTimeout","handleGoToList","push","handleAddNewItem","event","preventDefault","name","owner","e","target","value","map","c","index","String"],"mappings":"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","sourcesContent":["import { Button } from \"components\"\nimport { Categories } from \"core/types\"\nimport Router from \"next/router\"\nimport { FormEvent, useState } from \"react\"\nimport { addItem } from \"services/item.service\"\nimport * as S from \"./styles\"\n\nconst PASSWORD = \"reginaldo\"\n\nexport default function NewItem() {\n  const [itemName, setItemName] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [category, setCategory] = useState(Categories[0])\n\n  const [message, setMessage] = useState({\n    text: \"\",\n    kind: \"success\",\n  })\n\n  function showMessage(text: string, kind = \"success\") {\n    setMessage({ text, kind })\n\n    setTimeout(() => setMessage({ text: \"\", kind }), 2500)\n  }\n\n  function handleGoToList() {\n    Router.push(\"/items\")\n  }\n\n  async function handleAddNewItem(event: FormEvent) {\n    event.preventDefault()\n\n    if (!itemName)\n      return showMessage(\"Nome do item não pode ser vazio\", \"danger\")\n\n    if (password !== PASSWORD) return showMessage(\"Senha inválida\", \"danger\")\n\n    try {\n      await addItem({ name: itemName, owner: \"\", category })\n\n      setItemName(\"\")\n\n      showMessage(\"Item adicionado com sucesso\")\n    } catch (error) {\n      showMessage(\"Erro ao criar item\", \"danger\")\n    }\n  }\n\n  return (\n    <div>\n      <S.Form onSubmit={handleAddNewItem}>\n        <input\n          placeholder=\"Item\"\n          value={itemName}\n          onChange={(e) => setItemName(e.target.value)}\n        />\n\n        <label htmlFor=\"categories\">Selecione uma categoria:</label>\n        <select\n          name=\"categories\"\n          id=\"categories\"\n          value={category}\n          onChange={(e) => setCategory(e.target.value)}\n        >\n          {Categories.map((c, index) => (\n            <option key={String(index)} value={c}>\n              {c}\n            </option>\n          ))}\n        </select>\n\n        <input\n          placeholder=\"senha\"\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n\n        <Button type=\"submit\">Adicionar</Button>\n\n        <S.Message kind={message.kind}>{message.text}</S.Message>\n      </S.Form>\n\n      <S.GoToListWrapper>\n        <Button onClick={handleGoToList} kind=\"danger\" outlined>\n          LISTA DE ITEMS\n        </Button>\n      </S.GoToListWrapper>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}