{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/allefdouglasdev/Documents/Workspace/casanova/client/src/pages/items/new/index.tsx\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Categories } from \"core/types\";\nimport { useState } from \"react\";\nimport { addItem } from \"services/item.service\";\nvar PASSWORD = \"123\";\nexport default function NewItem() {\n  _s();\n\n  var _this = this;\n\n  var _useState = useState(\"\"),\n      itemName = _useState[0],\n      setItemName = _useState[1];\n\n  var _useState2 = useState(\"\"),\n      category = _useState2[0],\n      setCategory = _useState2[1];\n\n  var _useState3 = useState(Categories[0]),\n      password = _useState3[0],\n      setPassword = _useState3[1];\n\n  function handleAddNewItem(_x) {\n    return _handleAddNewItem.apply(this, arguments);\n  }\n\n  function _handleAddNewItem() {\n    _handleAddNewItem = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(event) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              event.preventDefault();\n\n              if (itemName) {\n                _context.next = 3;\n                break;\n              }\n\n              return _context.abrupt(\"return\", alert(\"Nome do item não pode ser vazio\"));\n\n            case 3:\n              if (!(password !== PASSWORD)) {\n                _context.next = 5;\n                break;\n              }\n\n              return _context.abrupt(\"return\", alert(\"Senha inválida\"));\n\n            case 5:\n              _context.prev = 5;\n              _context.next = 8;\n              return addItem({\n                name: itemName,\n                owner: \"\",\n                category: category\n              });\n\n            case 8:\n              setItemName(\"\");\n              alert(\"Item adicionado com sucesso\");\n              _context.next = 16;\n              break;\n\n            case 12:\n              _context.prev = 12;\n              _context.t0 = _context[\"catch\"](5);\n              alert(\"Erro ao criar item\");\n              console.log(\"Erro ao criar item\", _context.t0);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[5, 12]]);\n    }));\n    return _handleAddNewItem.apply(this, arguments);\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleAddNewItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    placeholder: \"Item\",\n    value: itemName,\n    onChange: function onChange(e) {\n      return setItemName(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"categories\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, \"Selecione uma categoria:\"), __jsx(\"select\", {\n    name: \"categories\",\n    id: \"categories\",\n    value: category,\n    onChange: function onChange(e) {\n      return setCategory(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }\n  }, Categories.map(function (c) {\n    return __jsx(\"option\", {\n      value: c,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }\n    }, c);\n  })), __jsx(\"input\", {\n    placeholder: \"senha\",\n    type: \"password\",\n    value: password,\n    onChange: function onChange(e) {\n      return setPassword(e.target.value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, \"Adicionar\")));\n}\n\n_s(NewItem, \"IHV/qJM/uzdo6G/DAYykKTv1YII=\");\n\n_c = NewItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"NewItem\");","map":{"version":3,"sources":["/Users/allefdouglasdev/Documents/Workspace/casanova/client/src/pages/items/new/index.tsx"],"names":["Categories","useState","addItem","PASSWORD","NewItem","itemName","setItemName","category","setCategory","password","setPassword","handleAddNewItem","event","preventDefault","alert","name","owner","console","log","e","target","value","map","c"],"mappings":"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","sourcesContent":["import { Categories } from \"core/types\"\nimport { FormEvent, useState } from \"react\"\nimport { addItem } from \"services/item.service\"\n\nconst PASSWORD = \"123\"\n\nexport default function NewItem() {\n  const [itemName, setItemName] = useState(\"\")\n  const [category, setCategory] = useState(\"\")\n  const [password, setPassword] = useState(Categories[0])\n\n  async function handleAddNewItem(event: FormEvent) {\n    event.preventDefault()\n\n    if (!itemName) return alert(\"Nome do item não pode ser vazio\")\n\n    if (password !== PASSWORD) return alert(\"Senha inválida\")\n\n    try {\n      await addItem({ name: itemName, owner: \"\", category })\n\n      setItemName(\"\")\n\n      alert(\"Item adicionado com sucesso\")\n    } catch (error) {\n      alert(\"Erro ao criar item\")\n      console.log(\"Erro ao criar item\", error)\n    }\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleAddNewItem}>\n        <input\n          placeholder=\"Item\"\n          value={itemName}\n          onChange={(e) => setItemName(e.target.value)}\n        />\n\n        <label htmlFor=\"categories\">Selecione uma categoria:</label>\n        <select\n          name=\"categories\"\n          id=\"categories\"\n          value={category}\n          onChange={(e) => setCategory(e.target.value)}\n        >\n          {Categories.map((c) => (\n            <option value={c}>{c}</option>\n          ))}\n        </select>\n\n        <input\n          placeholder=\"senha\"\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n\n        <button type=\"submit\">Adicionar</button>\n      </form>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}