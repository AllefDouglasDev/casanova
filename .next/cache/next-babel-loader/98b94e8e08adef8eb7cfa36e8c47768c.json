{"ast":null,"code":"var _jsxFileName = \"/Users/allefdouglasdev/Documents/Workspace/casanova/client/src/pages/items/new/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Categories } from \"core/types\";\nimport { useState } from \"react\";\nimport { addItem } from \"services/item.service\";\nconst PASSWORD = \"123\";\nexport default function NewItem() {\n  const {\n    0: itemName,\n    1: setItemName\n  } = useState(\"\");\n  const {\n    0: category,\n    1: setCategory\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(Categories[0]);\n\n  async function handleAddNewItem(event) {\n    event.preventDefault();\n    if (!itemName) return alert(\"Nome do item não pode ser vazio\");\n    if (password !== PASSWORD) return alert(\"Senha inválida\");\n\n    try {\n      const newItem = await addItem({\n        name: itemName,\n        owner: \"\"\n      });\n      console.log(\"Novo item criado\", newItem);\n      setItemName(\"\");\n      alert(\"Item adicionado com sucesso\");\n    } catch (error) {\n      alert(\"Erro ao criar item\");\n      console.log(\"Erro ao criar item\", error);\n    }\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }\n  }, __jsx(\"form\", {\n    onSubmit: handleAddNewItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    placeholder: \"Item\",\n    value: itemName,\n    onChange: e => setItemName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"categories\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  }, \"Choose a car:\"), __jsx(\"select\", {\n    name: \"categories\",\n    id: \"categories\",\n    value: category,\n    onChange: e => setCategory(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }\n  }, Categories.map(c => __jsx(\"option\", {\n    value: c,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }\n  }, c))), __jsx(\"input\", {\n    placeholder: \"senha\",\n    type: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }\n  }, \"Adicionar\")));\n}","map":{"version":3,"sources":["/Users/allefdouglasdev/Documents/Workspace/casanova/client/src/pages/items/new/index.tsx"],"names":["Categories","useState","addItem","PASSWORD","NewItem","itemName","setItemName","category","setCategory","password","setPassword","handleAddNewItem","event","preventDefault","alert","newItem","name","owner","console","log","error","e","target","value","map","c"],"mappings":";;;AAAA,SAASA,UAAT,QAA2B,YAA3B;AACA,SAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,uBAAxB;AAEA,MAAMC,QAAQ,GAAG,KAAjB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAChC,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BL,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACM,QAAD;AAAA,OAAWC;AAAX,MAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACQ,QAAD;AAAA,OAAWC;AAAX,MAA0BT,QAAQ,CAACD,UAAU,CAAC,CAAD,CAAX,CAAxC;;AAEA,iBAAeW,gBAAf,CAAgCC,KAAhC,EAAkD;AAChDA,IAAAA,KAAK,CAACC,cAAN;AAEA,QAAI,CAACR,QAAL,EAAe,OAAOS,KAAK,CAAC,iCAAD,CAAZ;AAEf,QAAIL,QAAQ,KAAKN,QAAjB,EAA2B,OAAOW,KAAK,CAAC,gBAAD,CAAZ;;AAE3B,QAAI;AACF,YAAMC,OAAO,GAAG,MAAMb,OAAO,CAAC;AAAEc,QAAAA,IAAI,EAAEX,QAAR;AAAkBY,QAAAA,KAAK,EAAE;AAAzB,OAAD,CAA7B;AAEAC,MAAAA,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCJ,OAAhC;AAEAT,MAAAA,WAAW,CAAC,EAAD,CAAX;AAEAQ,MAAAA,KAAK,CAAC,6BAAD,CAAL;AACD,KARD,CAQE,OAAOM,KAAP,EAAc;AACdN,MAAAA,KAAK,CAAC,oBAAD,CAAL;AACAI,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCC,KAAlC;AACD;AACF;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,QAAQ,EAAET,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,WAAW,EAAC,MADd;AAEE,IAAA,KAAK,EAAEN,QAFT;AAGE,IAAA,QAAQ,EAAGgB,CAAD,IAAOf,WAAW,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE;AAAO,IAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAPF,EAQE;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,EAAE,EAAC,YAFL;AAGE,IAAA,KAAK,EAAEhB,QAHT;AAIE,IAAA,QAAQ,EAAGc,CAAD,IAAOb,WAAW,CAACa,CAAC,CAACC,MAAF,CAASC,KAAV,CAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGvB,UAAU,CAACwB,GAAX,CAAgBC,CAAD,IACd;AAAQ,IAAA,KAAK,EAAEA,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBA,CAAnB,CADD,CANH,CARF,EAmBE;AACE,IAAA,WAAW,EAAC,OADd;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAEhB,QAHT;AAIE,IAAA,QAAQ,EAAGY,CAAD,IAAOX,WAAW,CAACW,CAAC,CAACC,MAAF,CAASC,KAAV,CAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,EA0BE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBA1BF,CADF,CADF;AAgCD","sourcesContent":["import { Categories } from \"core/types\"\nimport { FormEvent, useState } from \"react\"\nimport { addItem } from \"services/item.service\"\n\nconst PASSWORD = \"123\"\n\nexport default function NewItem() {\n  const [itemName, setItemName] = useState(\"\")\n  const [category, setCategory] = useState(\"\")\n  const [password, setPassword] = useState(Categories[0])\n\n  async function handleAddNewItem(event: FormEvent) {\n    event.preventDefault()\n\n    if (!itemName) return alert(\"Nome do item não pode ser vazio\")\n\n    if (password !== PASSWORD) return alert(\"Senha inválida\")\n\n    try {\n      const newItem = await addItem({ name: itemName, owner: \"\" })\n\n      console.log(\"Novo item criado\", newItem)\n\n      setItemName(\"\")\n\n      alert(\"Item adicionado com sucesso\")\n    } catch (error) {\n      alert(\"Erro ao criar item\")\n      console.log(\"Erro ao criar item\", error)\n    }\n  }\n\n  return (\n    <div>\n      <form onSubmit={handleAddNewItem}>\n        <input\n          placeholder=\"Item\"\n          value={itemName}\n          onChange={(e) => setItemName(e.target.value)}\n        />\n\n        <label htmlFor=\"categories\">Choose a car:</label>\n        <select\n          name=\"categories\"\n          id=\"categories\"\n          value={category}\n          onChange={(e) => setCategory(e.target.value)}\n        >\n          {Categories.map((c) => (\n            <option value={c}>{c}</option>\n          ))}\n        </select>\n\n        <input\n          placeholder=\"senha\"\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n\n        <button type=\"submit\">Adicionar</button>\n      </form>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}