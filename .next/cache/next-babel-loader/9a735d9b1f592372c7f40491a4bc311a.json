{"ast":null,"code":"var _jsxFileName = \"/Users/allefdouglasdev/Documents/Workspace/casanova/client/src/pages/items/new/index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Button } from \"components\";\nimport { Categories } from \"core/types\";\nimport Router from \"next/router\";\nimport { useState } from \"react\";\nimport { addItem } from \"services/item.service\";\nimport * as S from \"./styles\";\nconst PASSWORD = \"reginaldo\";\nexport default function NewItem() {\n  const {\n    0: itemName,\n    1: setItemName\n  } = useState(\"\");\n  const {\n    0: password,\n    1: setPassword\n  } = useState(\"\");\n  const {\n    0: category,\n    1: setCategory\n  } = useState(Categories[0]);\n  const {\n    0: message,\n    1: setMessage\n  } = useState({\n    text: \"\",\n    kind: \"success\"\n  });\n\n  function showMessage(text, kind = \"success\") {\n    setMessage({\n      text,\n      kind\n    });\n    setTimeout(() => setMessage({\n      text: \"\",\n      kind\n    }), 2500);\n  }\n\n  function handleGoToList() {\n    Router.push(\"/items\");\n  }\n\n  async function handleAddNewItem(event) {\n    event.preventDefault();\n    if (!itemName) return showMessage(\"Nome do item não pode ser vazio\", \"danger\");\n    if (password !== PASSWORD) return showMessage(\"Senha inválida\", \"danger\");\n\n    try {\n      await addItem({\n        name: itemName,\n        owner: \"\",\n        category\n      });\n      setItemName(\"\");\n      showMessage(\"Item adicionado com sucesso\");\n    } catch (error) {\n      showMessage(\"Erro ao criar item\", \"danger\");\n    }\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 5\n    }\n  }, __jsx(S.Form, {\n    onSubmit: handleAddNewItem,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, __jsx(\"input\", {\n    placeholder: \"Item\",\n    value: itemName,\n    onChange: e => setItemName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }), __jsx(\"label\", {\n    htmlFor: \"categories\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, \"Selecione uma categoria:\"), __jsx(\"select\", {\n    name: \"categories\",\n    id: \"categories\",\n    value: category,\n    onChange: e => setCategory(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, Categories.map(c => __jsx(\"option\", {\n    value: c,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }\n  }, c))), __jsx(\"input\", {\n    placeholder: \"senha\",\n    type: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }\n  }, \"Adicionar\"), __jsx(S.Message, {\n    kind: message.kind,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, message.text)), __jsx(S.GoToListWrapper, {\n    kind: \"danger\",\n    outlined: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, __jsx(Button, {\n    onClick: handleGoToList,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }\n  }, \"Lista de items\")));\n}","map":{"version":3,"sources":["/Users/allefdouglasdev/Documents/Workspace/casanova/client/src/pages/items/new/index.tsx"],"names":["Button","Categories","Router","useState","addItem","S","PASSWORD","NewItem","itemName","setItemName","password","setPassword","category","setCategory","message","setMessage","text","kind","showMessage","setTimeout","handleGoToList","push","handleAddNewItem","event","preventDefault","name","owner","error","e","target","value","map","c"],"mappings":";;;AAAA,SAASA,MAAT,QAAuB,YAAvB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAAoBC,QAApB,QAAoC,OAApC;AACA,SAASC,OAAT,QAAwB,uBAAxB;AACA,OAAO,KAAKC,CAAZ,MAAmB,UAAnB;AAEA,MAAMC,QAAQ,GAAG,WAAjB;AAEA,eAAe,SAASC,OAAT,GAAmB;AAChC,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BN,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACO,QAAD;AAAA,OAAWC;AAAX,MAA0BR,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACS,QAAD;AAAA,OAAWC;AAAX,MAA0BV,QAAQ,CAACF,UAAU,CAAC,CAAD,CAAX,CAAxC;AAEA,QAAM;AAAA,OAACa,OAAD;AAAA,OAAUC;AAAV,MAAwBZ,QAAQ,CAAC;AACrCa,IAAAA,IAAI,EAAE,EAD+B;AAErCC,IAAAA,IAAI,EAAE;AAF+B,GAAD,CAAtC;;AAKA,WAASC,WAAT,CAAqBF,IAArB,EAAmCC,IAAI,GAAG,SAA1C,EAAqD;AACnDF,IAAAA,UAAU,CAAC;AAAEC,MAAAA,IAAF;AAAQC,MAAAA;AAAR,KAAD,CAAV;AAEAE,IAAAA,UAAU,CAAC,MAAMJ,UAAU,CAAC;AAAEC,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA;AAAZ,KAAD,CAAjB,EAAuC,IAAvC,CAAV;AACD;;AAED,WAASG,cAAT,GAA0B;AACxBlB,IAAAA,MAAM,CAACmB,IAAP,CAAY,QAAZ;AACD;;AAED,iBAAeC,gBAAf,CAAgCC,KAAhC,EAAkD;AAChDA,IAAAA,KAAK,CAACC,cAAN;AAEA,QAAI,CAAChB,QAAL,EACE,OAAOU,WAAW,CAAC,iCAAD,EAAoC,QAApC,CAAlB;AAEF,QAAIR,QAAQ,KAAKJ,QAAjB,EAA2B,OAAOY,WAAW,CAAC,gBAAD,EAAmB,QAAnB,CAAlB;;AAE3B,QAAI;AACF,YAAMd,OAAO,CAAC;AAAEqB,QAAAA,IAAI,EAAEjB,QAAR;AAAkBkB,QAAAA,KAAK,EAAE,EAAzB;AAA6Bd,QAAAA;AAA7B,OAAD,CAAb;AAEAH,MAAAA,WAAW,CAAC,EAAD,CAAX;AAEAS,MAAAA,WAAW,CAAC,6BAAD,CAAX;AACD,KAND,CAME,OAAOS,KAAP,EAAc;AACdT,MAAAA,WAAW,CAAC,oBAAD,EAAuB,QAAvB,CAAX;AACD;AACF;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,CAAD,CAAG,IAAH;AAAQ,IAAA,QAAQ,EAAEI,gBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AACE,IAAA,WAAW,EAAC,MADd;AAEE,IAAA,KAAK,EAAEd,QAFT;AAGE,IAAA,QAAQ,EAAGoB,CAAD,IAAOnB,WAAW,CAACmB,CAAC,CAACC,MAAF,CAASC,KAAV,CAH9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAOE;AAAO,IAAA,OAAO,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gCAPF,EAQE;AACE,IAAA,IAAI,EAAC,YADP;AAEE,IAAA,EAAE,EAAC,YAFL;AAGE,IAAA,KAAK,EAAElB,QAHT;AAIE,IAAA,QAAQ,EAAGgB,CAAD,IAAOf,WAAW,CAACe,CAAC,CAACC,MAAF,CAASC,KAAV,CAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMG7B,UAAU,CAAC8B,GAAX,CAAgBC,CAAD,IACd;AAAQ,IAAA,KAAK,EAAEA,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAmBA,CAAnB,CADD,CANH,CARF,EAmBE;AACE,IAAA,WAAW,EAAC,OADd;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,KAAK,EAAEtB,QAHT;AAIE,IAAA,QAAQ,EAAGkB,CAAD,IAAOjB,WAAW,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAJ9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAnBF,EA0BE,MAAC,MAAD;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBA1BF,EA4BE,MAAC,CAAD,CAAG,OAAH;AAAW,IAAA,IAAI,EAAEhB,OAAO,CAACG,IAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAgCH,OAAO,CAACE,IAAxC,CA5BF,CADF,EAgCE,MAAC,CAAD,CAAG,eAAH;AAAmB,IAAA,IAAI,EAAC,QAAxB;AAAiC,IAAA,QAAQ,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAEI,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CAhCF,CADF;AAsCD","sourcesContent":["import { Button } from \"components\"\nimport { Categories } from \"core/types\"\nimport Router from \"next/router\"\nimport { FormEvent, useState } from \"react\"\nimport { addItem } from \"services/item.service\"\nimport * as S from \"./styles\"\n\nconst PASSWORD = \"reginaldo\"\n\nexport default function NewItem() {\n  const [itemName, setItemName] = useState(\"\")\n  const [password, setPassword] = useState(\"\")\n  const [category, setCategory] = useState(Categories[0])\n\n  const [message, setMessage] = useState({\n    text: \"\",\n    kind: \"success\",\n  })\n\n  function showMessage(text: string, kind = \"success\") {\n    setMessage({ text, kind })\n\n    setTimeout(() => setMessage({ text: \"\", kind }), 2500)\n  }\n\n  function handleGoToList() {\n    Router.push(\"/items\")\n  }\n\n  async function handleAddNewItem(event: FormEvent) {\n    event.preventDefault()\n\n    if (!itemName)\n      return showMessage(\"Nome do item não pode ser vazio\", \"danger\")\n\n    if (password !== PASSWORD) return showMessage(\"Senha inválida\", \"danger\")\n\n    try {\n      await addItem({ name: itemName, owner: \"\", category })\n\n      setItemName(\"\")\n\n      showMessage(\"Item adicionado com sucesso\")\n    } catch (error) {\n      showMessage(\"Erro ao criar item\", \"danger\")\n    }\n  }\n\n  return (\n    <div>\n      <S.Form onSubmit={handleAddNewItem}>\n        <input\n          placeholder=\"Item\"\n          value={itemName}\n          onChange={(e) => setItemName(e.target.value)}\n        />\n\n        <label htmlFor=\"categories\">Selecione uma categoria:</label>\n        <select\n          name=\"categories\"\n          id=\"categories\"\n          value={category}\n          onChange={(e) => setCategory(e.target.value)}\n        >\n          {Categories.map((c) => (\n            <option value={c}>{c}</option>\n          ))}\n        </select>\n\n        <input\n          placeholder=\"senha\"\n          type=\"password\"\n          value={password}\n          onChange={(e) => setPassword(e.target.value)}\n        />\n\n        <Button type=\"submit\">Adicionar</Button>\n\n        <S.Message kind={message.kind}>{message.text}</S.Message>\n      </S.Form>\n\n      <S.GoToListWrapper kind=\"danger\" outlined>\n        <Button onClick={handleGoToList}>Lista de items</Button>\n      </S.GoToListWrapper>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}